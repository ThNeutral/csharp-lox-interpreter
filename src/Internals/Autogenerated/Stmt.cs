using internals.token;

namespace internals.autogenerated {
	public abstract class Stmt {
		public abstract R Accept<R>(IVisitor<R> visitor);
		public interface IVisitor<R> {
			public R VisitBlockStmt(Block stmt);
			public R VisitExpressionStmt(Expression stmt);
			public R VisitPrintStmt(Print stmt);
			public R VisitVarStmt(Var stmt);
		}
		public class Block : Stmt {
			public readonly List<Stmt> statements;
			public Block(List<Stmt> statements) {
				this.statements = statements;
			}
			public override R Accept<R>(IVisitor<R> visitor) {
				return visitor.VisitBlockStmt(this);
			}
		}
		public class Expression : Stmt {
			public readonly Expr expression;
			public Expression(Expr expression) {
				this.expression = expression;
			}
			public override R Accept<R>(IVisitor<R> visitor) {
				return visitor.VisitExpressionStmt(this);
			}
		}
		public class Print : Stmt {
			public readonly Expr expression;
			public Print(Expr expression) {
				this.expression = expression;
			}
			public override R Accept<R>(IVisitor<R> visitor) {
				return visitor.VisitPrintStmt(this);
			}
		}
		public class Var : Stmt {
			public readonly Token name;
			public readonly Expr intializer;
			public Var(Token name, Expr intializer) {
				this.name = name;
				this.intializer = intializer;
			}
			public override R Accept<R>(IVisitor<R> visitor) {
				return visitor.VisitVarStmt(this);
			}
		}
	}
}
